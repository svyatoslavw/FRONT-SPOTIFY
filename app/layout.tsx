'use client'
import { client } from '@/api/apollo.interceptor'
import Navbar from '@/components/navbar/Navbar'
import { ApolloProvider } from '@apollo/client'
import { loadDevMessages, loadErrorMessages } from '@apollo/client/dev'
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { Inter } from 'next/font/google'
import { usePathname } from 'next/navigation'
import { PropsWithChildren } from 'react'
import { Provider } from 'react-redux'
import { PersistGate } from 'redux-persist/integration/react'
import './globals.css'
import AuthProvider from './providers/auth-provider/AuthProvider'
import ToasterProvider from './providers/toaster-provider/ToasterProvider'
import { persistor, store } from './store/store'

const inter = Inter({ subsets: ['latin'], weight: ['200', '300', '400', '500', '600', '700'] })

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      refetchOnWindowFocus: false,
    },
  },
})
export default function RootLayout({ children }: PropsWithChildren<unknown>) {
  const pathname = usePathname()

  loadDevMessages()
  loadErrorMessages()
  return (
    <html lang="en">
      <body className={inter.className}>
        <ApolloProvider client={client}>
          <QueryClientProvider client={queryClient}>
            <Provider store={store}>
              <PersistGate persistor={persistor} loading={null}>
                <AuthProvider>
                  <ToasterProvider />
                  <div>
                    {pathname.includes('auth') ||
                    pathname.includes('account') ||
                    pathname.includes('admin') ? (
                      <div>{children}</div>
                    ) : (
                      <div className="grid overflow-hidden grid-cols-[0fr,1fr] grid-rows-1 gap-x-0 gap-y-0">
                        <Navbar />
                        <div className="p-2 pl-0">{children}</div>
                        {/* <PlayerWrapper /> */}
                      </div>
                    )}
                  </div>
                </AuthProvider>
              </PersistGate>
            </Provider>
          </QueryClientProvider>
        </ApolloProvider>
        <div id="modal"></div>
      </body>
    </html>
  )
}
